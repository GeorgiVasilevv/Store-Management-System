@using StoreManagementSystem.Core.Interfaces;
@using StoreManagementSystem.Extensions;
@model StoreAllViewModel

@inject IUserService UserService;
@{
    bool isOwner = await UserService.HasStoreWithIdAsync(User?.GetId(), Model.Id);
}


<div class="col-md-4" style="margin-bottom: 50px">
    <div class="card mb-3">
        <img class="card-img-top fixed-image" src="@Model.ImageUrl" alt="Store Image">
        <div class="card-body text-center">
            <h4>@Model.Title</h4>
            <h6>Address: <b>@Model.Address</b></h6>
            <h6>
                Rating:
                <b>@($"{Model.Rating.ToString().Replace(",", "."):f2} / 10.00")</b>
            </h6>
            <br />
            <a asp-controller="Store" asp-action="Details" asp-route-id="@Model.Id" asp-route-information="@Model.GetUrlInformation()"
               class="btn btn-success">Details</a>
            @if (User?.Identity?.IsAuthenticated ?? false)
            {
                if (isOwner || User.IsUserAdmin())
                {
                    <a asp-controller="Store" asp-action="Edit" asp-route-id="@Model.Id"
                       class="btn btn-warning">Edit</a>
                    <a asp-controller="Store" asp-action="Delete" asp-route-id="@Model.Id"
                       class="btn btn-danger">Delete</a>
                    <p></p>
                }
            }
        </div>
    </div>
</div>
